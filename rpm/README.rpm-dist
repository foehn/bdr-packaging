README.rpm-dist
-----------------------------------------------------------------------------
PostgreSQL 9.4 with BDR, for the 2ndQuadrant RPM distribution based on PGDG
Devrim Gündüz <devrim@gunduz.org> with changes by Craig Ringer <craig@2ndquadrant.com>
-----------------------------------------------------------------------------

Contents:
 1.)	Introduction and QuickStart
 2.)	Upgrading an installation
 3.)	PostgreSQL RPM packages and rationale
 4.)	Starting multiple postmasters
 5.)	Regression Testing
 6.)	Starting postmaster automatically on startup
 7.)	The postgresql.conf file
 8.)	Logging configuration
 9.)	Rebuilding from the source RPM
10.)	Contrib files
11.)	Further Information Resource

INTRODUCTION
-----------------------------------------------------------------------------

The RPM set you are using is distributed by 2ndQuadrant and contains
modifications to PostgreSQL 9.4 to support BDR, the Bi-Directional Replication
project for PostgreSQL. See https://wiki.postgresql.org/wiki/BDR_User_Guide for
more information about BDR.

It is based on the PGDG RPMs from http://yum.postgresql.org/ .

Please ask questions or report issues with this package to
pgsql-general@postgresql.org, with "BDR" in the subject line. Be sure to
mention the specific distro/version and BDR version you are using.

BDR DIFFERENCES
-----------------------------------------------------------------------------

BDR is compatible with normal PostgreSQL 9.4 except for the actual on-disk data
format, which is very slightly different. For that reason the BDR RPMs use a
different data directory, /var/lib/pgsql/9.4-bdr , rather than the
/var/lib/pgsql/9.4 used by stock PGDG RPMs.

The BDR RPMs may not be installed at the same time as stock PGDG RPMs. If you
attempt to install postgresql94 while postgresql-bdr94 is installed, or vice
versa, you will get a conflict error from RPM.

Otherwise, BDR is fully compatible with the normal PostgreSQL packages, with
the same service name, paths, default port, protocol and clients, extension
format, etc. You can use extensions compiled for normal PostgreSQL 9.4 with
BDR.

QUICKSTART
-----------------------------------------------------------------------------

(This section describes how to start a normal standalone PostgreSQL server
using the BDR-patched packages. You can then add this server to a BDR node
group or create a new one, per the documentation at
https://wiki.postgresql.org/wiki/BDR_User_Guide)

To start a PostgreSQL server, you must first ensure that
postgresql-bdr94-server is installed. If you intend to use the new BDR
features, you should also install postgresql-bdr94-bdr .

For a fresh installation, you will need to initialize the cluster first. Run:

	/usr/pgsql-9.4/bin/postgresql94-setup initdb

as root, and it will prepare a new database cluster for you. Then you will 
need to start PostgreSQL. Again as root, run:

	systemctl start postgresql-9.4.service

or on older distros that use sysvinit:

        service start postgresql-9.4

This command will start a postmaster that willl listen on localhost and Unix 
socket 5432 only.  Edit /var/lib/pgsql/9.4-bdr/data/postgresql.conf and pg_hba.conf 
if you want to allow remote access -- see the section on Grand Unified 
Configuration.

You will probably also want to do

	systemctl enable postgresql-9.4.service

or for older distros:
 
        chkconfig postgresql-9.4 on

so that the postmaster is automatically started during future reboots.

The file /var/lib/pgsql/.bash_profile is packaged to help with the 
setting of environment variables. You may edit this file, and it won't be
overwritten during an upgrade.  However, enhancements and bugfixes may 
be added to this file, so be sure to check .bash_profile.rpmnew after 
upgrading.

The user 'postgres' is created during installation of the server subpackage.
This user by default is UID and GID 26. The user has the default shell set to
bash, and the home directory set to /var/lib/pgsql.  This user also has no
default password.  If you want to be able to su to it from a non-root account
or login as 'postgres' you will need to set a password using passwd.

In the default installation, only postgres user is allowed to access to 
the database server, because initdb in the RPMs pick up "peer" auth 
method in the RPMs. 

All the binaries are installed under /usr/pgsql-9.4/bin. However, the 
tools that are compatible with the previous releases are symlinked under 
/usr/bin directory. Please note that RPMs are using alternatives method 
in here, so whenever a newer major version is installed, symlinks will 
point to the new version. Here is the current list of the binaries that 
are under $PATH:

- clusterdb
- createdb
- createlang
- createuser
- dropdb
- droplang
- dropuser
- pg_dump
- pg_dumpall
- pg_restore
- psql
- reindexdb

You may want to add /usr/pgsql-9.4/bin to your $PATH variable in 
/etc/profile, if you want to use them easily. However, please note that 
this may lead to some unintentional side effects, so be careful.


UPGRADING AN INSTALLATION
-----------------------------------------------------------------------------
For a minor-version upgrade (such as 9.4.1 to 9.4.2), just install the
new RPMs; there's usually nothing more to it than that.  Upgrading
across a major release of PostgreSQL (for example, from 9.2.x to 9.4.x)
requires more effort.

See the BDR wiki for more information on upgrading PostgreSQL 9.4 with BDR.

POSTGRESQL RPM PACKAGES AND RATIONALE.
-----------------------------------------------------------------------------
PostgreSQL is split up into multiple packages so that users can 'pick and
choose' what pieces are needed, and what dependencies are required.

The RPMset is packaged in the following subpackages:

postgresql-bdr94:           Key clients and libraries, and documentation
postgresql-bdr94-server:    Server executables and data files
postgresql-bdr94-bdr:       The BDR extension its self
postgresql-bdr94-devel:     Development libraries and include files
postgresql-bdr94-test:	    The regression tests and associated files
postgresql-bdr94-libs:      Client shared libraries
postgresql-bdr94-docs:	    Extra documentation, such as the tutorial files
postgresql-bdr94-contrib:   The contrib source tree, as well as selected binaries
postgresql-bdr94-plperl:    PL/Perl procedural language
postgresql-bdr94-plpython:  PL/Python procedural language
postgresql-bdr94-pltcl:     PL/Tcl procedural language

You have to install postgresql-bdr94 and postgresql-bdr94-libs to do anything.
postgresql-bdr94-server is needed unless you only plan to use the clients to work
with a remote PostgreSQL server, in which case you might as well use stock PostgreSQL
instead of BDR. postgresql-bdr94-bdr is required to actually use the BDR extension to
enable BDR. The others are optional.

RPM FILE LOCATIONS.
-----------------------------------------------------------------------------
To be in compliance with the Linux FHS, the PostgreSQL RPMs install files in
a manner not consistent with most of the PostgreSQL documentation.  According
to the standard PostgreSQL documentation, PostgreSQL is installed under the
directory /usr/local/pgsql, with executables, source, and data existing in
various subdirectories.

Different distributions have different ideas of some of these file locations.
In particular, the documentation directory can be /usr/doc, /usr/doc/packages,
/usr/share/doc, /usr/share/doc/packages, or some other similar paths.

However, the Red Hat / Scientific Linux ( CentOS / Fedora RPM's install 
the files like this:

Executables:		/usr/bin and /usr/pgsql-9.4/bin
Libraries:		/usr/pgsql-9.4/lib
Documentation:		/usr/pgsql-9.4/doc
Contrib documentation:	/usr/pgsql-9.4/doc
Source:			not installed
Data:			/var/lib/pgsql/9.4/data
Backup area:		/var/lib/pgsql/9.4/backups
Templates:		/usr/pgsql-9.4/share
Procedural Languages:	/usr/pgsql-9.4/lib
Development Headers:	/usr/pgsql-9.4/include
Other shared data:	/usr/pgsql-9.4/share
Regression tests:	/usr/pgsql-9.4/lib/test

While it may seem gratuitous to place these files in different locations, the
FHS requires it -- distributions should not ever touch /usr/local.  It may
also seem like more work to keep track of where everything is -- but, that's
the beauty of RPM -- you don't have to keep track of the files, RPM does it
for you.

STARTING POSTMASTER AUTOMATICALLY AT SYSTEM STARTUP
-------------------------------------------------------------------------------
Current Fedora / Red Hat / CentOS use the systemd package to manage server
startup.  A systemd unit file for PostgreSQL is provided in the server package,
as /lib/systemd/system/postgresql-9.4.service.  To start the postmaster
manually, as root run
	systemctl start postgresql-9.4.service
To shut the postmaster down,
	systemctl stop postgresql-9.4.service
These two commands only change the postmaster's current status.  If you
want the postmaster to be started automatically during future system startups,
run
	systemctl enable postgresql-9.4.service
To undo that again,
	systemctl disable postgresql-9.4.service
See "man systemctl" for other possible subcommands.


If you're on CentOS 5 or 6 you must use the 'chkconfig' command instead, as
these releases do not use systemd. See the 'chkconfig' manual for details.

THE POSTGRESQL.CONF FILE
-------------------------------------------------------------------------------
The PostgreSQL server has many tunable parameters -- the file 
/var/lib/pgsql/9.4-bdr/data/postgresql.conf is the master configuration file for the
whole system.  

The RPM ships with a mostly-default file -- you will need to tune the
parameters for your installation.  In particular, you might want to allow
nonlocal TCP/IP socket connections -- in order to allow these, you will need
to edit the postgresql.conf file.  The line in question contains the string 
'listen_addresses' -- you need to both uncomment the line and set the value
to '*' to get the postmaster to accept nonlocal connections.  You'll also need
to adjust pg_hba.conf appropriately.

LOGGING CONFIGURATION
-------------------------------------------------------------------------------
By default, the postmaster's stderr log is directed into files placed in a
pg_log subdirectory of the data directory (ie, /var/lib/pgsql/9.4-bdr/data/pg_log).
The out-of-the-box configuration rotates among seven files, one for each
day of the week.  You can adjust this by changing postgresql.conf settings.

MORE INFORMATION
-------------------------------------------------------------------------------
To learn more about BDR, see https://wiki.postgresql.org/wiki/BDR_User_Guide
You can get more information about PostgreSQL at http://www.postgresql.org . 
For the unmodified PGDG RPMs, see http://yum.postgresql.org
-------------------------------------------------------------------------------
